name: Continuous build
on:
  push:
    branches:
      - master
      - 2.2.1

jobs:
  BuildLinux:
    runs-on: ubuntu-24.04
    outputs:
      output1: ${{ steps.artifact-upload-step.outputs.artifact-id }}
    steps:
      - name: Checkout code
        uses: actions/checkout@main
        with:
          fetch-depth: 0

      - name: Install dependencies
        run: |
          sudo apt-get -y update
          sudo apt-get -qq install qmake6 qt6-base-dev qt6-declarative-dev qt6-image-formats-plugin-pdf qt6-pdf-dev linguist-qt6
          sudo apt-get -qq install qt6-svg-dev libqt6svgwidgets6 qt6-l10n-tools qtchooser qt6-wayland-dev qt6-tools-dev
          sudo apt-get -qq install libgl-dev libxcb-cursor0 libmuparser-dev libboost-dev
          sudo apt-get -qq install imagemagick librsvg2-bin libfreetype6-dev libicu-dev pkg-config libfuse2 rsync
          sudo apt-get -qq install cmake
          
      - name: Set Dark splash
        # Test setting dark splash screen for `2.2.2_alpha`,
        # then switch "Loading..." label text color to white.
        # Comment this if `master` is used for releases.
        if: github.ref == 'refs/heads/master'
        run: |
          mkdir -p ${{github.workspace}}/librecad/res/main
          rsync ${{github.workspace}}/desktop/media/splash/librecad01_dark.png ${{github.workspace}}/librecad/res/main/splash_librecad.png
          sed -i 's/Qt::black/Qt::white/g' ${{github.workspace}}/librecad/src/main/main.cpp
      - name: Build and analyze
        run: |
          echo "cmake"
          cmake -S . -B unix
          echo "cmake build"
          cmake --build unix -j$(nproc)
          
      - name: Create AppImage
        run: |
          QT_FILE_DIR="${{github.workspace}}/../Qt" ./CI/build-appimg.sh
          mv LibreCAD*.AppImage LibreCAD-`git describe --always`.AppImage
      - name: List files
        run: |
          echo ${{ github.workspace }} && ls ${{ github.workspace }}
        shell: bash

      - name: Upload artifact
        id: artifact-upload-step
        uses: actions/upload-artifact@main
        with:
          name: linuxAssets
          path: LibreCAD*.AppImage
          retention-days: 2

  BuildLinuxAarch64:
    runs-on: ubuntu-24.04-arm
    outputs:
      output1: ${{ steps.artifact-upload-step.outputs.artifact-id }}
    steps:
      - name: Checkout code
        uses: actions/checkout@main
        with:
          fetch-depth: 0

      - name: Install Qt and dependencies
        run: |
          sudo apt-get -y update
          sudo apt-get -qq install qmake6 qt6-base-dev qt6-declarative-dev qt6-image-formats-plugin-pdf qt6-pdf-dev linguist-qt6
          sudo apt-get -qq install qt6-svg-dev libqt6svgwidgets6 qt6-l10n-tools qtchooser qt6-wayland-dev qt6-tools-dev
          sudo apt-get -qq install libgl-dev libxcb-cursor0 libmuparser-dev libboost-dev
          sudo apt-get -qq install imagemagick librsvg2-bin libfreetype6-dev libicu-dev pkg-config libfuse2 rsync
          sudo apt-get -qq install cmake

      - name: Install Clang
        run: |
          sudo apt-get -qq install clang-18 clang-tools-18

      - name: Set Dark splash
        # Test setting dark splash screen for `2.2.2_alpha`,
        # then switch "Loading..." label text color to white.
        # Comment this if `master` is used for releases.
        if: github.ref == 'refs/heads/master'
        run: |
          mkdir -p ${{github.workspace}}/librecad/res/main
          rsync ${{github.workspace}}/desktop/media/splash/librecad01_dark.png ${{github.workspace}}/librecad/res/main/splash_librecad.png
          sed -i 's/Qt::black/Qt::white/g' ${{github.workspace}}/librecad/src/main/main.cpp
          sed -i '/fontweight/d' ${{github.workspace}}/librecad/src/ui/dock_widgets/ucs_list/lc_dlgucsproperties.ui

      - name: Build and analyze
        run: |
          export CC=clang
          export CXX=clang++
          export ANALYZE="scan-build-18 -o out --use-cc=/usr/bin/clang++ --use-analyzer=/usr/bin/clang++ "
          #${ANALYZE}qmake6 -r librecad.pro CONFIG+=debug_and_release PREFIX=/usr
          #${ANALYZE}make release -j$(nproc)
          cmake -S . -B unix
          cmake --build unix -j$(nproc)

      - name: Create AppImage
        run: |
          find unix/
          ./CI/build-appimg-aarch64.sh
          #mv LibreCAD*.AppImage LibreCAD-`git describe --always`-aarch64.AppImage

      - name: List files
        run: |
          echo ${{ github.workspace }} && ls ${{ github.workspace }}
        shell: bash

      - name: Upload artifact
        id: artifact-upload-step
        uses: actions/upload-artifact@main
        with:
          name: linuxAssetsAarch64
          path: LibreCAD*.AppImage
          retention-days: 2

  BuildSnap:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@main
        with:
          fetch-depth: 0
          ref: master

      - name: Install Qt6
        uses: jurplel/install-qt-action@v4
        with:
          version: '6.9.*'
          host: 'linux'
          target: 'desktop'
          arch: 'linux_gcc_64'
          modules: 'qtwaylandcompositor qtimageformats'

      - name: install snap
        uses: samuelmeuli/action-snapcraft@v2
          
      - name: Create snapcraft
        run: |
          pwd
          ls
          ls scripts
          bash ./scripts/createSnap.sh
          mv librecad*.snap LibreCAD-`git describe --always`.snap

      - name: Uploading snap
        uses: actions/upload-artifact@v4
        with:
          name: snapAssets
          path: ${{github.workspace}}/LibreCAD*.snap
          retention-days: 2

  BuildMacOS:
    runs-on: macos-14
    outputs:
      output1: ${{ steps.artifact-upload-step.outputs.artifact-id }}
    steps:
      - name: Checkout code
        uses: actions/checkout@main
        with:
          fetch-depth: 0

      - name: uninstall p7zip
        run: |
          brew uninstall p7zip

      - name: Install Qt6
        uses: jurplel/install-qt-action@v4
        with:
          version: '6.6.*'
          modules: 'qt5compat'

      - name: Install boost dependencies
        run: |
          brew install boost

      # XProtect can cause random failures if it decides that the DMG we create
      # during the packaging phase is malware.
      # TODO: Do it in a cleaner way
      # Inspiration: https://github.com/servo/servo/pull/30779
      - name: Kill XProtectBehaviorService
        run: |
          echo Killing XProtect.; sudo pkill -9 XProtect >/dev/null || true;

      - name: Build and packaging
        run: |
          scripts/build-osx.sh
          mv LibreCAD.dmg LibreCAD-`git describe --always`.dmg

      - name: Upload artifact
        id: artifact-upload-step
        uses: actions/upload-artifact@main
        with:
          name: macOSAssets
          path: LibreCAD*.dmg
          retention-days: 2

  BuildWindows64:
    runs-on: windows-2022
    outputs:
      output1: ${{ steps.artifact-upload-step.outputs.artifact-id }}
    steps:
      - name: Checkout code
        uses: actions/checkout@main
        with:
          fetch-depth: 0

      - name: Install Qt6
        uses: jurplel/install-qt-action@v4
        with:
          version: '6.9.*'
          host: 'windows'
          arch: 'win64_msvc2022_64'
          target: 'desktop'
          tools-only: 'false'
          modules: 'qt3d qt5compat qtimageformats qtshadertools'
          tools: 'tools_cmake'
          
      - name: (3) Add MSBuild to PATH
        uses: microsoft/setup-msbuild@v2

      - name: Install boost
        uses: MarkusJx/install-boost@v2
        id: installBoost
        with:
          # REQUIRED: Specify the required boost version
          # A list of supported versions can be found here:
          # https://github.com/MarkusJx/prebuilt-boost/blob/main/versions-manifest.json
          boost_version: 1.87.0
          # OPTIONAL: Specify a custon install location
          boost_install_dir: ${{ github.workspace }}/../
          # OPTIONAL: Specify a platform version
          platform_version: 2022
          # OPTIONAL: Specify a toolset
          toolset: msvc

      - name: Configure CMake
        run: |
          cmake.exe -S . -B generated -G "Visual Studio 17 2022" -DBoost_INCLUDE_DIR=%BOOST_ROOT%/include -DBoost_LIBRARY_DIRS=%BOOST_ROOT%/lib 
        shell: cmd
        env:
          BUILD_TYPE: release
          MSVC_VER_NUMBER: "Visual Studio 17 2022"
          BOOST_ROOT: ${{ steps.installBoost.outputs.BOOST_ROOT }}
          CMAKE_CXX_FLAGS: " /MP8"

      - name: Build
        run: |
          cmake --build generated --config Release
        shell: cmd

      - name: listFile
        run: |
          cd generated
          dir *.*
          dir Release\*.*
          dir x64\*.*
        shell: cmd

      - name: List files
        run: |
            echo "${{ github.workspace }}"
            dir "${{ github.workspace }}"
        shell: cmd

      - name: winDeployment
        run: |
          copy CI\custom-win.pri custom.pri
          copy CI\custom-win-x64.nsh scripts\postprocess-windows\custom.nsh
          mkdir generated\plugins
          for /r %%a in (*.dll) do copy "%%a" generated\plugins
          cd generated
          windeployqt6.exe --release --compiler-runtime Release\LibreCAD.exe
          dir *.*
          pushd "${{ github.workspace }}\scripts"
          call build-win-setup.bat
        shell: cmd
        
      - name: Rename installer
        run: |
          mv LibreCAD-Installer.exe LibreCAD-`git describe --always`-win64.exe
        shell: bash

      - name: Upload artifact
        id: artifact-upload-step
        uses: actions/upload-artifact@main
        with:
          name: win64Assets
          path: LibreCAD*.exe
          retention-days: 2

  UpdateAssets:
    if: github.repository_owner == 'LibreCAD'
    needs: [BuildLinux, BuildLinuxAarch64, BuildMacOS, BuildWindows64, BuildSnap]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@main
        with:
          fetch-depth: 0

      - name: Delete existing
        run: gh release delete "2.2.2_alpha-latest" -y
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Fetch artifacts
        uses: actions/download-artifact@main

      - name: Upload latest pre-release
        uses: softprops/action-gh-release@v2
        with:
          name: "Continuous Build: latest development"
          tag_name: "2.2.2_alpha-latest"
          prerelease: true
          draft: false
          files: |
            linuxAssets/LibreCAD*.AppImage
            linuxAssetsAarch64/LibreCAD*.AppImage
            macOSAssets/LibreCAD*.dmg
            win64Assets/LibreCAD*.exe
            snapAssets/LibreCAD*.snap
            LICENSE
